/// This file has messages for describing a customer.

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file service-clustering.proto (package com.wallet.demo.clustering.grpc.admin, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { BoolValue, Int32Value, Int64Value, Message, proto3, StringValue } from "@bufbuild/protobuf";

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.OtherMessage
 */
export class OtherMessage extends Message<OtherMessage> {
  /**
   * @generated from field: com.wallet.demo.clustering.grpc.admin.Case2 value = 1;
   */
  value?: Case2;

  constructor(data?: PartialMessage<OtherMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.OtherMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: Case2 },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OtherMessage {
    return new OtherMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OtherMessage {
    return new OtherMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OtherMessage {
    return new OtherMessage().fromJsonString(jsonString, options);
  }

  static equals(a: OtherMessage | PlainMessage<OtherMessage> | undefined, b: OtherMessage | PlainMessage<OtherMessage> | undefined): boolean {
    return proto3.util.equals(OtherMessage, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.Case1
 */
export class Case1 extends Message<Case1> {
  /**
   * @generated from field: google.protobuf.StringValue msg = 1;
   */
  msg?: string;

  constructor(data?: PartialMessage<Case1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.Case1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "msg", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Case1 {
    return new Case1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Case1 {
    return new Case1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Case1 {
    return new Case1().fromJsonString(jsonString, options);
  }

  static equals(a: Case1 | PlainMessage<Case1> | undefined, b: Case1 | PlainMessage<Case1> | undefined): boolean {
    return proto3.util.equals(Case1, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.Case2
 */
export class Case2 extends Message<Case2> {
  /**
   * @generated from field: google.protobuf.Int32Value value = 1;
   */
  value?: number;

  constructor(data?: PartialMessage<Case2>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.Case2";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: Int32Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Case2 {
    return new Case2().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Case2 {
    return new Case2().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Case2 {
    return new Case2().fromJsonString(jsonString, options);
  }

  static equals(a: Case2 | PlainMessage<Case2> | undefined, b: Case2 | PlainMessage<Case2> | undefined): boolean {
    return proto3.util.equals(Case2, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.AdSetupOptional
 */
export class AdSetupOptional extends Message<AdSetupOptional> {
  /**
   * @generated from field: com.wallet.demo.clustering.grpc.admin.AdSetup value = 1;
   */
  value?: AdSetup;

  constructor(data?: PartialMessage<AdSetupOptional>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.AdSetupOptional";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: AdSetup },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdSetupOptional {
    return new AdSetupOptional().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdSetupOptional {
    return new AdSetupOptional().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdSetupOptional {
    return new AdSetupOptional().fromJsonString(jsonString, options);
  }

  static equals(a: AdSetupOptional | PlainMessage<AdSetupOptional> | undefined, b: AdSetupOptional | PlainMessage<AdSetupOptional> | undefined): boolean {
    return proto3.util.equals(AdSetupOptional, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.AdSetup
 */
export class AdSetup extends Message<AdSetup> {
  /**
   * @generated from oneof com.wallet.demo.clustering.grpc.admin.AdSetup.sealed_value
   */
  sealedValue: {
    /**
     * @generated from field: com.wallet.demo.clustering.grpc.admin.Case1 c1 = 1;
     */
    value: Case1;
    case: "c1";
  } | {
    /**
     * @generated from field: com.wallet.demo.clustering.grpc.admin.Case2 c2 = 2;
     */
    value: Case2;
    case: "c2";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<AdSetup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.AdSetup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "c1", kind: "message", T: Case1, oneof: "sealed_value" },
    { no: 2, name: "c2", kind: "message", T: Case2, oneof: "sealed_value" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdSetup {
    return new AdSetup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdSetup {
    return new AdSetup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdSetup {
    return new AdSetup().fromJsonString(jsonString, options);
  }

  static equals(a: AdSetup | PlainMessage<AdSetup> | undefined, b: AdSetup | PlainMessage<AdSetup> | undefined): boolean {
    return proto3.util.equals(AdSetup, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.rpcOperationRequest
 */
export class rpcOperationRequest extends Message<rpcOperationRequest> {
  /**
   * @generated from field: com.wallet.demo.clustering.grpc.admin.AdSetup in = 1;
   */
  in?: AdSetup;

  constructor(data?: PartialMessage<rpcOperationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.rpcOperationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "in", kind: "message", T: AdSetup },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): rpcOperationRequest {
    return new rpcOperationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): rpcOperationRequest {
    return new rpcOperationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): rpcOperationRequest {
    return new rpcOperationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: rpcOperationRequest | PlainMessage<rpcOperationRequest> | undefined, b: rpcOperationRequest | PlainMessage<rpcOperationRequest> | undefined): boolean {
    return proto3.util.equals(rpcOperationRequest, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.rpcOperationResponse
 */
export class rpcOperationResponse extends Message<rpcOperationResponse> {
  /**
   * @generated from field: google.protobuf.Int64Value balance = 1;
   */
  balance?: bigint;

  constructor(data?: PartialMessage<rpcOperationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.rpcOperationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "balance", kind: "message", T: Int64Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): rpcOperationResponse {
    return new rpcOperationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): rpcOperationResponse {
    return new rpcOperationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): rpcOperationResponse {
    return new rpcOperationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: rpcOperationResponse | PlainMessage<rpcOperationResponse> | undefined, b: rpcOperationResponse | PlainMessage<rpcOperationResponse> | undefined): boolean {
    return proto3.util.equals(rpcOperationResponse, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.CreditRequest
 */
export class CreditRequest extends Message<CreditRequest> {
  /**
   * @generated from field: google.protobuf.StringValue id = 1;
   */
  id?: string;

  /**
   * @generated from field: google.protobuf.Int32Value amount = 2;
   */
  amount?: number;

  constructor(data?: PartialMessage<CreditRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.CreditRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: StringValue },
    { no: 2, name: "amount", kind: "message", T: Int32Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreditRequest {
    return new CreditRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreditRequest {
    return new CreditRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreditRequest {
    return new CreditRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreditRequest | PlainMessage<CreditRequest> | undefined, b: CreditRequest | PlainMessage<CreditRequest> | undefined): boolean {
    return proto3.util.equals(CreditRequest, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.DebitRequest
 */
export class DebitRequest extends Message<DebitRequest> {
  /**
   * @generated from field: google.protobuf.StringValue id = 1;
   */
  id?: string;

  /**
   * @generated from field: google.protobuf.Int32Value amount = 2;
   */
  amount?: number;

  constructor(data?: PartialMessage<DebitRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.DebitRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: StringValue },
    { no: 2, name: "amount", kind: "message", T: Int32Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DebitRequest {
    return new DebitRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DebitRequest {
    return new DebitRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DebitRequest {
    return new DebitRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DebitRequest | PlainMessage<DebitRequest> | undefined, b: DebitRequest | PlainMessage<DebitRequest> | undefined): boolean {
    return proto3.util.equals(DebitRequest, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.Request
 */
export class Request extends Message<Request> {
  constructor(data?: PartialMessage<Request>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.Request";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Request {
    return new Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Request {
    return new Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Request {
    return new Request().fromJsonString(jsonString, options);
  }

  static equals(a: Request | PlainMessage<Request> | undefined, b: Request | PlainMessage<Request> | undefined): boolean {
    return proto3.util.equals(Request, a, b);
  }
}

/**
 * *
 * Represents a RequestId.
 *
 * @generated from message com.wallet.demo.clustering.grpc.admin.RequestId
 */
export class RequestId extends Message<RequestId> {
  /**
   * * Account Id. 
   *
   * @generated from field: google.protobuf.StringValue id = 1;
   */
  id?: string;

  constructor(data?: PartialMessage<RequestId>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.RequestId";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RequestId {
    return new RequestId().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RequestId {
    return new RequestId().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RequestId {
    return new RequestId().fromJsonString(jsonString, options);
  }

  static equals(a: RequestId | PlainMessage<RequestId> | undefined, b: RequestId | PlainMessage<RequestId> | undefined): boolean {
    return proto3.util.equals(RequestId, a, b);
  }
}

/**
 * *
 * Represents a response.
 *
 * @generated from message com.wallet.demo.clustering.grpc.admin.Response
 */
export class Response extends Message<Response> {
  /**
   * / Message value.
   *
   * @generated from field: google.protobuf.StringValue message = 1;
   */
  message?: string;

  constructor(data?: PartialMessage<Response>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.Response";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "message", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Response {
    return new Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Response {
    return new Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Response {
    return new Response().fromJsonString(jsonString, options);
  }

  static equals(a: Response | PlainMessage<Response> | undefined, b: Response | PlainMessage<Response> | undefined): boolean {
    return proto3.util.equals(Response, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.BalanceResponse
 */
export class BalanceResponse extends Message<BalanceResponse> {
  /**
   * @generated from field: google.protobuf.Int64Value balance = 1;
   */
  balance?: bigint;

  constructor(data?: PartialMessage<BalanceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.BalanceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "balance", kind: "message", T: Int64Value },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BalanceResponse {
    return new BalanceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BalanceResponse {
    return new BalanceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BalanceResponse {
    return new BalanceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: BalanceResponse | PlainMessage<BalanceResponse> | undefined, b: BalanceResponse | PlainMessage<BalanceResponse> | undefined): boolean {
    return proto3.util.equals(BalanceResponse, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.BadRequestError
 */
export class BadRequestError extends Message<BadRequestError> {
  /**
   * @generated from field: google.protobuf.StringValue code = 1;
   */
  code?: string;

  /**
   * @generated from field: google.protobuf.StringValue title = 2;
   */
  title?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 3;
   */
  description?: string;

  constructor(data?: PartialMessage<BadRequestError>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.BadRequestError";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "message", T: StringValue },
    { no: 2, name: "title", kind: "message", T: StringValue },
    { no: 3, name: "description", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BadRequestError {
    return new BadRequestError().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BadRequestError {
    return new BadRequestError().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BadRequestError {
    return new BadRequestError().fromJsonString(jsonString, options);
  }

  static equals(a: BadRequestError | PlainMessage<BadRequestError> | undefined, b: BadRequestError | PlainMessage<BadRequestError> | undefined): boolean {
    return proto3.util.equals(BadRequestError, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.UnauthorizedError
 */
export class UnauthorizedError extends Message<UnauthorizedError> {
  /**
   * @generated from field: google.protobuf.StringValue code = 1;
   */
  code?: string;

  /**
   * @generated from field: google.protobuf.StringValue title = 2;
   */
  title?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 3;
   */
  description?: string;

  constructor(data?: PartialMessage<UnauthorizedError>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.UnauthorizedError";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "message", T: StringValue },
    { no: 2, name: "title", kind: "message", T: StringValue },
    { no: 3, name: "description", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnauthorizedError {
    return new UnauthorizedError().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnauthorizedError {
    return new UnauthorizedError().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnauthorizedError {
    return new UnauthorizedError().fromJsonString(jsonString, options);
  }

  static equals(a: UnauthorizedError | PlainMessage<UnauthorizedError> | undefined, b: UnauthorizedError | PlainMessage<UnauthorizedError> | undefined): boolean {
    return proto3.util.equals(UnauthorizedError, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.ForbiddenError
 */
export class ForbiddenError extends Message<ForbiddenError> {
  /**
   * @generated from field: google.protobuf.StringValue code = 1;
   */
  code?: string;

  /**
   * @generated from field: google.protobuf.StringValue title = 2;
   */
  title?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 3;
   */
  description?: string;

  constructor(data?: PartialMessage<ForbiddenError>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.ForbiddenError";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "message", T: StringValue },
    { no: 2, name: "title", kind: "message", T: StringValue },
    { no: 3, name: "description", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ForbiddenError {
    return new ForbiddenError().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ForbiddenError {
    return new ForbiddenError().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ForbiddenError {
    return new ForbiddenError().fromJsonString(jsonString, options);
  }

  static equals(a: ForbiddenError | PlainMessage<ForbiddenError> | undefined, b: ForbiddenError | PlainMessage<ForbiddenError> | undefined): boolean {
    return proto3.util.equals(ForbiddenError, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.NotFoundError
 */
export class NotFoundError extends Message<NotFoundError> {
  /**
   * @generated from field: google.protobuf.StringValue code = 1;
   */
  code?: string;

  /**
   * @generated from field: google.protobuf.StringValue title = 2;
   */
  title?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 3;
   */
  description?: string;

  constructor(data?: PartialMessage<NotFoundError>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.NotFoundError";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "message", T: StringValue },
    { no: 2, name: "title", kind: "message", T: StringValue },
    { no: 3, name: "description", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NotFoundError {
    return new NotFoundError().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NotFoundError {
    return new NotFoundError().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NotFoundError {
    return new NotFoundError().fromJsonString(jsonString, options);
  }

  static equals(a: NotFoundError | PlainMessage<NotFoundError> | undefined, b: NotFoundError | PlainMessage<NotFoundError> | undefined): boolean {
    return proto3.util.equals(NotFoundError, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.TooManyRequestsError
 */
export class TooManyRequestsError extends Message<TooManyRequestsError> {
  /**
   * @generated from field: google.protobuf.StringValue code = 1;
   */
  code?: string;

  /**
   * @generated from field: google.protobuf.StringValue title = 2;
   */
  title?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 3;
   */
  description?: string;

  constructor(data?: PartialMessage<TooManyRequestsError>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.TooManyRequestsError";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "message", T: StringValue },
    { no: 2, name: "title", kind: "message", T: StringValue },
    { no: 3, name: "description", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TooManyRequestsError {
    return new TooManyRequestsError().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TooManyRequestsError {
    return new TooManyRequestsError().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TooManyRequestsError {
    return new TooManyRequestsError().fromJsonString(jsonString, options);
  }

  static equals(a: TooManyRequestsError | PlainMessage<TooManyRequestsError> | undefined, b: TooManyRequestsError | PlainMessage<TooManyRequestsError> | undefined): boolean {
    return proto3.util.equals(TooManyRequestsError, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.ServiceUnavailableError
 */
export class ServiceUnavailableError extends Message<ServiceUnavailableError> {
  /**
   * @generated from field: google.protobuf.StringValue code = 1;
   */
  code?: string;

  /**
   * @generated from field: google.protobuf.StringValue title = 2;
   */
  title?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 3;
   */
  description?: string;

  constructor(data?: PartialMessage<ServiceUnavailableError>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.ServiceUnavailableError";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "message", T: StringValue },
    { no: 2, name: "title", kind: "message", T: StringValue },
    { no: 3, name: "description", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServiceUnavailableError {
    return new ServiceUnavailableError().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServiceUnavailableError {
    return new ServiceUnavailableError().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServiceUnavailableError {
    return new ServiceUnavailableError().fromJsonString(jsonString, options);
  }

  static equals(a: ServiceUnavailableError | PlainMessage<ServiceUnavailableError> | undefined, b: ServiceUnavailableError | PlainMessage<ServiceUnavailableError> | undefined): boolean {
    return proto3.util.equals(ServiceUnavailableError, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.GatewayTimeoutError
 */
export class GatewayTimeoutError extends Message<GatewayTimeoutError> {
  /**
   * @generated from field: google.protobuf.StringValue code = 1;
   */
  code?: string;

  /**
   * @generated from field: google.protobuf.StringValue title = 2;
   */
  title?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 3;
   */
  description?: string;

  constructor(data?: PartialMessage<GatewayTimeoutError>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.GatewayTimeoutError";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "message", T: StringValue },
    { no: 2, name: "title", kind: "message", T: StringValue },
    { no: 3, name: "description", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GatewayTimeoutError {
    return new GatewayTimeoutError().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GatewayTimeoutError {
    return new GatewayTimeoutError().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GatewayTimeoutError {
    return new GatewayTimeoutError().fromJsonString(jsonString, options);
  }

  static equals(a: GatewayTimeoutError | PlainMessage<GatewayTimeoutError> | undefined, b: GatewayTimeoutError | PlainMessage<GatewayTimeoutError> | undefined): boolean {
    return proto3.util.equals(GatewayTimeoutError, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.InternalServerError
 */
export class InternalServerError extends Message<InternalServerError> {
  /**
   * @generated from field: google.protobuf.StringValue code = 1;
   */
  code?: string;

  /**
   * @generated from field: google.protobuf.StringValue title = 2;
   */
  title?: string;

  /**
   * @generated from field: google.protobuf.StringValue description = 3;
   */
  description?: string;

  constructor(data?: PartialMessage<InternalServerError>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.InternalServerError";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "message", T: StringValue },
    { no: 2, name: "title", kind: "message", T: StringValue },
    { no: 3, name: "description", kind: "message", T: StringValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InternalServerError {
    return new InternalServerError().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InternalServerError {
    return new InternalServerError().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InternalServerError {
    return new InternalServerError().fromJsonString(jsonString, options);
  }

  static equals(a: InternalServerError | PlainMessage<InternalServerError> | undefined, b: InternalServerError | PlainMessage<InternalServerError> | undefined): boolean {
    return proto3.util.equals(InternalServerError, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.TargetCriteria
 */
export class TargetCriteria extends Message<TargetCriteria> {
  /**
   * @generated from field: com.wallet.demo.clustering.grpc.admin.ListLocationRuleOptional locationRules = 1;
   */
  locationRules?: ListLocationRuleOptional;

  /**
   * @generated from field: com.wallet.demo.clustering.grpc.admin.ListLocationRuleOptional locationRules2 = 2;
   */
  locationRules2?: ListLocationRuleOptional;

  /**
   * repeated LocationRule locationRules3 = 3
   * [
   *   (scalapb.field).no_box = true,
   *   (scalapb.field).required = true
   * ]; // error
   *
   * @generated from field: repeated com.wallet.demo.clustering.grpc.admin.LocationRule locationRules3 = 3;
   */
  locationRules3: LocationRule[] = [];

  /**
   * @generated from field: com.wallet.demo.clustering.grpc.admin.ListStringOptional bins = 10;
   */
  bins?: ListStringOptional;

  constructor(data?: PartialMessage<TargetCriteria>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.TargetCriteria";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "locationRules", kind: "message", T: ListLocationRuleOptional },
    { no: 2, name: "locationRules2", kind: "message", T: ListLocationRuleOptional },
    { no: 3, name: "locationRules3", kind: "message", T: LocationRule, repeated: true },
    { no: 10, name: "bins", kind: "message", T: ListStringOptional },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TargetCriteria {
    return new TargetCriteria().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TargetCriteria {
    return new TargetCriteria().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TargetCriteria {
    return new TargetCriteria().fromJsonString(jsonString, options);
  }

  static equals(a: TargetCriteria | PlainMessage<TargetCriteria> | undefined, b: TargetCriteria | PlainMessage<TargetCriteria> | undefined): boolean {
    return proto3.util.equals(TargetCriteria, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.ListLocationRuleOptional
 */
export class ListLocationRuleOptional extends Message<ListLocationRuleOptional> {
  /**
   * @generated from field: repeated com.wallet.demo.clustering.grpc.admin.LocationRule value = 1;
   */
  value: LocationRule[] = [];

  constructor(data?: PartialMessage<ListLocationRuleOptional>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.ListLocationRuleOptional";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: LocationRule, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListLocationRuleOptional {
    return new ListLocationRuleOptional().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListLocationRuleOptional {
    return new ListLocationRuleOptional().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListLocationRuleOptional {
    return new ListLocationRuleOptional().fromJsonString(jsonString, options);
  }

  static equals(a: ListLocationRuleOptional | PlainMessage<ListLocationRuleOptional> | undefined, b: ListLocationRuleOptional | PlainMessage<ListLocationRuleOptional> | undefined): boolean {
    return proto3.util.equals(ListLocationRuleOptional, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.LocationRule
 */
export class LocationRule extends Message<LocationRule> {
  /**
   * @generated from field: google.protobuf.BoolValue included = 2;
   */
  included?: boolean;

  /**
   * @generated from field: repeated google.protobuf.StringValue values = 3;
   */
  values: StringValue[] = [];

  constructor(data?: PartialMessage<LocationRule>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.LocationRule";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "included", kind: "message", T: BoolValue },
    { no: 3, name: "values", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LocationRule {
    return new LocationRule().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LocationRule {
    return new LocationRule().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LocationRule {
    return new LocationRule().fromJsonString(jsonString, options);
  }

  static equals(a: LocationRule | PlainMessage<LocationRule> | undefined, b: LocationRule | PlainMessage<LocationRule> | undefined): boolean {
    return proto3.util.equals(LocationRule, a, b);
  }
}

/**
 * @generated from message com.wallet.demo.clustering.grpc.admin.ListStringOptional
 */
export class ListStringOptional extends Message<ListStringOptional> {
  /**
   * @generated from field: repeated google.protobuf.StringValue value = 1;
   */
  value: StringValue[] = [];

  constructor(data?: PartialMessage<ListStringOptional>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "com.wallet.demo.clustering.grpc.admin.ListStringOptional";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "message", T: StringValue, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListStringOptional {
    return new ListStringOptional().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListStringOptional {
    return new ListStringOptional().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListStringOptional {
    return new ListStringOptional().fromJsonString(jsonString, options);
  }

  static equals(a: ListStringOptional | PlainMessage<ListStringOptional> | undefined, b: ListStringOptional | PlainMessage<ListStringOptional> | undefined): boolean {
    return proto3.util.equals(ListStringOptional, a, b);
  }
}

